tasks:
  # Auto-restore Gitpod environment variables
  # https://www.gitpod.io/guides/automate-env-files-with-gitpod-environment-variables
  - name: Restore .env file
    command: |
      if [ -f .env ]; then
        # If this workspace already has a .env, don't override it
        # Local changes survive a workspace being opened and closed
        # but they will not persist between separate workspaces for the same repo
        echo "Found .env in workspace"
      else
        if [ -z "${DOTENV}" ]; then
          # There is no $DOTENV from a previous workspace
          # Default to the example .env
          echo "Setting example .env"
          cp .env.example .env 
        else
          # After making changes to .env, run this line to persist it to $DOTENV
          #   gp env DOTENV="$(base64 .env | tr -d '\n')"
          # 
          # Environment variables set this way are shared between all your workspaces for this repo
          # The lines below will read $DOTENV and print a .env file
          echo "Restoring .env from Gitpod"
          echo "${DOTENV}" | base64 -d > .env
        fi
      fi
  - name: Start bot
    init: npm install
    command: npm run start

# Gitpod suggested commands to add github support to Gitpod.
# This should make using Gitpod easier and faster.
github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: true
    # enable for all branches in this repo (defaults to false)
    branches: false
    # enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
    # enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: true
    # add a "Review in Gitpod" button as a comment to pull requests (defaults to true)
    addComment: true
    # add a "Review in Gitpod" button to pull requests (defaults to false)
    addBadge: false
    # add a label once the prebuild is ready to pull requests (defaults to false)
    addLabel: prebuilt-in-gitpod
